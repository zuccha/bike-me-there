{"version":3,"sources":["components/sidebar/Sidebar.module.css","components/sidebar/tab-bar/TabBar.module.css","assets/position_marker.svg","App.module.css","assets/station_marker_hot.svg","components/map/Map.module.css","assets/station_marker.svg","components/sidebar/fancyTimeFormat.js","components/sidebar/fancyDistanceFormat.js","components/sidebar/TripTime.js","utils/directionPositions.js","utils/geodistance.js","utils/mightHaveFewBikesAt.js","utils/shortestPath.js","utils/memo.js","utils/createUniqueMarker.js","utils/getTime.js","utils/addGoogleSearchBox.js","utils/getPosition.js","utils/geoCoder.js","components/sidebar/tab-bar/TabBar.js","components/sidebar/tab-bar/index.js","components/sidebar/Credits.js","components/sidebar/TripTitle.js","components/sidebar/Sidebar.js","components/map/stylesMap.js","components/map/Map.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","time","hrs","mins","ret","distance","Math","round","TripTime","path","alternative","from","to","transport","duration","className","styles","tripContainer","classNames","tripTimeContainer","tripWalking","tripBike","short","dotTop","dotAlternative","dotShort","trimTimeIconContainer","DirectionsWalkOutlined","fontSize","tripTimeIcon","DirectionsBikeOutlined","tripText","tripTextStep","tripInfo","tripDuration","fancyTimeFormat","tripDistance","fancyDistanceFormat","dotBottom","defaultProps","position","startPos","destPos","markers","startMarker","destMarker","places","startPlace","destPlace","polylines","shortest","setShortestPath","setAlternativePath","getPolylines","setStart","latitude","setDest","longitude","getPositions","getMarkers","setStartMarker","marker","setDestMarker","setStartPlace","place","setDestPlace","getPlaces","deg2rad","deg","PI","geodistance","coords1","coords2","delta","lat","lng","a","sin","cos","atan2","sqrt","station","loans","weekDay","hour","returns","getDirections","func","cache","args","key","JSON","stringify","result","memo","maps","startCoords","endCoords","Promise","resolve","reject","DirectionsService","route","travelMode","origin","LatLng","destination","status","overviewPath","routes","overview_path","map","point","legs","leg","value","reduce","acc","knn","stations","k","slice","sort","s1","s2","coords","getCompositeRouteDuration","compositeRoute","shortestPath","startStations","endStations","compositeRoutes","startStation","endStation","id","fromStartToStartStationDirections","fromStartStationToEndStationDirections","stationToStationDirections","fromEndStationToEndDirections","push","end","compositeRouteByDuration","cr1","cr2","shortestCompositeRoute","onFootDirectRoute","undefined","mightHaveFewBikesAt","shortestAlternativeCompositeRoute","find","cr","selectedInfoWindow","makeInfoWindow","title","icon","hideInfoWindow","drop","Marker","Number","animation","Animation","DROP","infoWindow","InfoWindow","content","addListener","close","open","weekDays","0","1","2","3","4","5","6","date","getDay","getHours","positionMarker","require","flagIcon","directionPositions","paths","alternativePaths","addSearchListener","searchBox","kind","markerIcon","location","event","set","setMap","geometry","getBounds","contains","name","createUniqueMarker","setZIndex","alert","panTo","addGoogleSearchBox","fromRef","toRef","fromSearchBox","SearchBox","current","toSearchBox","searchBounds","LatLngBounds","setBounds","navigator","geolocation","Error","getCurrentPosition","mapHandler","inputRef","geocoder","Geocoder","getPosition","currentPosition","geocode","results","formatted_address","TabBar","tabs","useState","activeTabIndex","setActiveTabIndex","length","labels","index","label","active","onClick","setOptions","strokeWeight","zIndex","container","header","component","Credits","onBack","creditsContainer","creditsBackContainer","ArrowBack","creditsBack","style","creditsTitle","creditsItem","href","TripTitle","tripTitle","tripTitleHighlight","forEach","Sidebar","setPaths","isCreditsVisible","setIsCreditsVisible","alternativePath","overallTripContainer","i","src","process","width","alt","titleBike","titleMe","titleThere","inputContainer","iconContainer","ref","placeholder","input","paddingRight","MyLocation","locationIcon","geoCoder","secondInput","destInput","button","onPathFound","bounds","extend","fitBounds","getTime","Date","then","lineSymbol","strokeOpacity","animationDelayAlternative","delay","pathIndex","pathPolyLine","Polyline","geodesic","strokeColor","icons","offset","repeat","animatedPath","MVCArray","currentCoord","setPath","setTimeout","animationDelayShortest","runShortestPathAlg","Boolean","tabBar","footer","footerInfo","hotStationLogo","legend","creditsButtonContainer","creditsButton","elementType","stylers","color","featureType","Map","defaultCenter","defaultZoom","onApiLoaded","publibikeStations","options","stylesMap","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","bootstrapURLKeys","libraries","stationLogo","App","setMapHandler","useRef","useEffect","luganoStations","logo","sidebar","mainPanel","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.399df490.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Sidebar_title__UrS-M\",\"titleBike\":\"Sidebar_titleBike__39vCV\",\"titleMe\":\"Sidebar_titleMe__PTa7u\",\"titleThere\":\"Sidebar_titleThere__1cVte\",\"container\":\"Sidebar_container__2N9Yq\",\"header\":\"Sidebar_header__1AfXZ\",\"footer\":\"Sidebar_footer__19jfB\",\"footerInfo\":\"Sidebar_footerInfo__1hNMM\",\"hotPoint\":\"Sidebar_hotPoint__32hcM\",\"legend\":\"Sidebar_legend__zH0Yj\",\"button\":\"Sidebar_button__2k5Em\",\"content\":\"Sidebar_content__3rlJy\",\"inputContainer\":\"Sidebar_inputContainer__vhQSi\",\"iconContainer\":\"Sidebar_iconContainer__3R3Iz\",\"icon\":\"Sidebar_icon__2Ov5z\",\"input\":\"Sidebar_input__BbyMA\",\"locationIcon\":\"Sidebar_locationIcon__3H-Ee\",\"secondInput\":\"Sidebar_secondInput__QhsQ5\",\"destInput\":\"Sidebar_destInput__zVnlN\",\"overallTripContainer\":\"Sidebar_overallTripContainer__18fqw\",\"tripTitle\":\"Sidebar_tripTitle__3V1r6\",\"tripTitleHighlight\":\"Sidebar_tripTitleHighlight__2zx8V\",\"tripTimeContainer\":\"Sidebar_tripTimeContainer__yQvk9\",\"tripWalking\":\"Sidebar_tripWalking__1H8cd\",\"tripBike\":\"Sidebar_tripBike__1Njor\",\"alternative\":\"Sidebar_alternative__ill4Q\",\"short\":\"Sidebar_short__ljHoc\",\"tripText\":\"Sidebar_tripText__1fNMr\",\"tripTextStep\":\"Sidebar_tripTextStep__33JLO\",\"tripInfo\":\"Sidebar_tripInfo__N_dny\",\"tripDuration\":\"Sidebar_tripDuration__2n3uf\",\"tripDistance\":\"Sidebar_tripDistance__i4U-2\",\"trimTimeIconContainer\":\"Sidebar_trimTimeIconContainer__3sp4x\",\"tripTimeIcon\":\"Sidebar_tripTimeIcon__2XCgg\",\"tripContainer\":\"Sidebar_tripContainer__-eGUl\",\"dotTop\":\"Sidebar_dotTop__1clfL\",\"dotAlternative\":\"Sidebar_dotAlternative__2P7Ic\",\"dotShort\":\"Sidebar_dotShort__1BzlU\",\"dotBottom\":\"Sidebar_dotBottom__oCgmC\",\"transparentDot\":\"Sidebar_transparentDot__3dQKf\",\"dottedLine\":\"Sidebar_dottedLine__2ewDH\",\"pathContainer\":\"Sidebar_pathContainer__2gUWD\",\"line\":\"Sidebar_line__186Em\",\"tabBar\":\"Sidebar_tabBar__12ahF\",\"creditsButtonContainer\":\"Sidebar_creditsButtonContainer__1pSy5\",\"creditsButton\":\"Sidebar_creditsButton__3RSps\",\"creditsContainer\":\"Sidebar_creditsContainer__1uFZ2\",\"creditsBackContainer\":\"Sidebar_creditsBackContainer__2XeMU\",\"creditsBack\":\"Sidebar_creditsBack__133kC\",\"creditsTitle\":\"Sidebar_creditsTitle__3lu2R\",\"creditsItem\":\"Sidebar_creditsItem__RQ6KF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"TabBar_header__2o0w1\",\"label\":\"TabBar_label___ewVa\",\"marginRight\":\"TabBar_marginRight__3pjkH\",\"active\":\"TabBar_active__3Adj0\"};","module.exports = __webpack_public_path__ + \"static/media/position_marker.36a26b88.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"sidebar\":\"App_sidebar__1l9Om\",\"mainPanel\":\"App_mainPanel__2UNbJ\"};","module.exports = __webpack_public_path__ + \"static/media/station_marker_hot.2af14da7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Map_map__3TMwp\"};","module.exports = __webpack_public_path__ + \"static/media/station_marker.3dfb6805.svg\";","export default time => {\n  // Hours, minutes and seconds\n  var hrs = ~~(time / 3600);\n  var mins = ~~((time % 3600) / 60);\n  // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n  var ret = '';\n  if (hrs > 0) {\n    ret += '' + hrs + ':' + (mins < 10 ? '0' : '');\n  }\n  ret += '' + mins === '0' ? '1' : mins;\n  ret += ' min';\n  return ret;\n};\n","export default distance => (\n  distance < 1000\n    ? `${Math.round(distance)} m`\n    : `${Math.round(distance / 100) / 10} km`\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {DirectionsBikeOutlined, DirectionsWalkOutlined} from '@material-ui/icons';\nimport styles from './Sidebar.module.css';\nimport fancyTimeFormat from './fancyTimeFormat';\nimport fancyDistanceFormat from './fancyDistanceFormat';\n\nconst TripTime = ({path, alternative, from, to}) => {\n    const {transport, duration, distance} = path;\n    return (\n        <div className={styles.tripContainer}>\n            <div className={classNames(styles.tripTimeContainer, transport === 'WALKING'? styles.tripWalking : styles.tripBike, alternative ? styles.alternative : styles.short)}>\n                {transport === 'WALKING' ? <div className={classNames(styles.dotTop, alternative ? styles.dotAlternative : styles.dotShort)}/>:null}\n                <div className={styles.trimTimeIconContainer}>\n                    {transport === 'WALKING'\n                        ? <DirectionsWalkOutlined fontSize={'default'} className={styles.tripTimeIcon}/>\n                        : <DirectionsBikeOutlined fontSize={'default'} className={styles.tripTimeIcon}/>\n                    }\n                </div>\n                <div className={styles.tripText}>\n                    <span>{`${transport === 'WALKING' ? 'Walk' : 'Bike'} from `}</span>\n                    <span className={styles.tripTextStep}>{from}</span>\n                    <span>{' to '}</span>\n                    <span className={styles.tripTextStep}>{to}</span>\n                </div>\n                <div className={styles.tripInfo}>\n                    <div className={styles.tripDuration}>{fancyTimeFormat(duration)}</div>\n                    <div className={styles.tripDistance}>{fancyDistanceFormat(distance)}</div>\n                </div>\n                {transport === 'WALKING' ? <div className={classNames(styles.dotBottom, alternative ? styles.dotAlternative : styles.dotShort)}/>: null}\n            </div>\n        </div>\n    )\n};\n\nTripTime.propTypes = {\n    path: PropTypes.any,\n    alternative: PropTypes.bool,\n    from: PropTypes.string,\n    to: PropTypes.string,\n};\n\nTripTime.defaultProps = {\n    alternative: false\n};\n\nexport default TripTime;\n\n","const position = {\n  startPos: null,\n  destPos: null\n};\n\nconst markers = {\n  startMarker : null,\n  destMarker : null,\n};\n\nconst places = {\n  startPlace: null,\n  destPlace: null,\n};\n\nconst polylines = {\n  shortest: null,\n  alternative: null,\n};\n\nfunction setShortestPath(path) {\n  polylines.shortest = path;\n}\n\nfunction setAlternativePath(path) {\n  polylines.alternative = path;\n}\n\nfunction getPolylines() {\n  return polylines\n}\n\nfunction setStart(latitude) {\n  position.startPos = latitude;\n}\n\nfunction setDest(longitude) {\n  position.destPos = longitude;\n}\n\nfunction setStartMarker(marker) {\n  markers.startMarker = marker;\n}\n\nfunction setDestMarker(marker) {\n  markers.destMarker = marker;\n}\n\nfunction setStartPlace(place) {\n  places.startPlace = place;\n}\n\nfunction setDestPlace(place) {\n  places.destPlace = place;\n}\n\nfunction getPositions() {\n  return position\n}\n\nfunction getMarkers(){\n  return markers\n}\n\nfunction getPlaces() {\n  return places\n}\n\nexport default  {\n  setShortestPath,\n  setAlternativePath,\n  getPolylines,\n  setStart,\n  setDest,\n  getPositions,\n  getMarkers,\n  setStartMarker,\n  setDestMarker,\n  setStartPlace,\n  setDestPlace,\n  getPlaces,\n}\n\n","const deg2rad = deg => {\n  return deg * (Math.PI / 180);\n};\n\nconst geodistance = (coords1, coords2) => {\n  const R = 6371; // Radius of the earth in km\n  const delta = {\n    lat: deg2rad(coords2.lat - coords1.lat),\n    lng: deg2rad(coords2.lng - coords1.lng),\n  };\n  const a =\n    Math.sin(delta.lat / 2) * Math.sin(delta.lat / 2)\n    + Math.cos(deg2rad(coords1.lat))\n    * Math.cos(deg2rad(coords2.lat))\n    * Math.sin(delta.lng / 2) * Math.sin(delta.lng / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\n\nexport default geodistance;\n","export default (station, time) => {\n  const loans =\n    station.loans[time.weekDay] &&\n    station.loans[time.weekDay][time.hour]\n      ? station.loans[time.weekDay][time.hour]\n      : 0;\n\n  const returns =\n    station.returns[time.weekDay] &&\n    station.returns[time.weekDay][time.hour]\n      ? station.returns[time.weekDay][time.hour]\n      : 0;\n\n  return returns - loans < 0;\n};","import stations from '../data/stations';\nimport stationToStationDirections from '../data/stationToStationDirections';\nimport geodistance from './geodistance';\nimport memo from './memo';\nimport mightHaveFewBikesAt from './mightHaveFewBikesAt';\n\nconst getDirections = memo(\n  (maps, startCoords, endCoords, transport) => new Promise((resolve, reject) => {\n    const directionsService = new maps.DirectionsService();\n    directionsService.route({\n      travelMode: transport,\n      origin: new maps.LatLng(startCoords.lat, startCoords.lng),\n      destination: new maps.LatLng(endCoords.lat, endCoords.lng),\n    }, (result, status) => {\n      if (status === 'OK') {\n        resolve({\n          transport,\n          overviewPath: result.routes[0].overview_path.map(point => ({\n            lat: point.lat(),\n            lng: point.lng(),\n          })),\n          duration: result.routes[0].legs\n            .map(leg => leg.duration.value)\n            .reduce((acc, value) => acc + value, 0),\n          distance: result.routes[0].legs\n            .map(leg => leg.distance.value)\n            .reduce((acc, value) => acc + value, 0),\n        });\n      } else {\n        reject(status);\n      }\n    });\n  }),\n);\n\nconst knn = (stations, point, k = 3) => stations\n  .slice()\n  .sort((s1, s2) => geodistance(s1.coords, point) - geodistance(s2.coords, point))\n  .slice(0, k);\n\nconst getCompositeRouteDuration = compositeRoute => compositeRoute\n  .map(({ duration }) => duration)\n  .reduce((acc, value) => acc + value, 0);\n\nconst shortestPath = async (maps, startCoords, endCoords, time) => {\n  const startStations = knn(stations, startCoords);\n  const endStations = knn(stations, endCoords);\n\n  const compositeRoutes = [];\n  for (let startStation of startStations) {\n    for (let endStation of endStations) {\n      if (startStation.id === endStation.id) {\n        continue;\n      }\n\n      const fromStartToStartStationDirections = await getDirections(maps, startCoords, startStation.coords, 'WALKING');\n      const fromStartStationToEndStationDirections = stationToStationDirections[startStation.id][endStation.id];\n      const fromEndStationToEndDirections = await getDirections(maps, endStation.coords, endCoords, 'WALKING');\n      compositeRoutes.push([\n        {\n          overviewPath: fromStartToStartStationDirections.overviewPath,\n          duration: fromStartToStartStationDirections.duration,\n          distance: fromStartToStartStationDirections.distance,\n          transport: 'WALKING',\n        },\n        {\n          overviewPath: fromStartStationToEndStationDirections.overviewPath,\n          duration: fromStartStationToEndStationDirections.duration,\n          distance: fromStartStationToEndStationDirections.distance,\n          stations: {\n            from: startStation,\n            end: endStation,\n          },\n          transport: 'BICYCLING',\n        },\n        {\n          overviewPath: fromEndStationToEndDirections.overviewPath,\n          duration: fromEndStationToEndDirections.duration,\n          distance: fromEndStationToEndDirections.distance,\n          transport: 'WALKING',\n        },\n      ]);\n    }\n  }\n\n  const compositeRouteByDuration = compositeRoutes\n    .slice()\n    .sort((cr1, cr2) => getCompositeRouteDuration(cr1) - getCompositeRouteDuration(cr2));\n\n  const shortestCompositeRoute = compositeRouteByDuration[0];\n\n  const onFootDirectRoute = await getDirections(maps, startCoords, endCoords, 'WALKING');\n  if (onFootDirectRoute.duration < getCompositeRouteDuration(shortestCompositeRoute)) {\n    return {\n      shortest: [onFootDirectRoute],\n      alternative: undefined, // FIXME: returns hortest alternative.\n    };\n  }\n\n  if (mightHaveFewBikesAt(shortestCompositeRoute[1].stations.end, time)) {\n    return {\n      shortest: shortestCompositeRoute,\n      alternative: undefined,\n    };\n  }\n\n  const shortestAlternativeCompositeRoute = compositeRouteByDuration\n    .find(cr => mightHaveFewBikesAt(cr[1].stations.end, time));\n\n  return {\n    shortest: shortestCompositeRoute,\n    alternative: shortestAlternativeCompositeRoute,\n  };\n};\n\nexport default shortestPath;\n","export default func => {\n  const cache = {};\n  return async (...args) => {\n    const key = JSON.stringify(args);\n    if (cache[key]) {\n      return cache[key];\n    }\n    const result = await func(...args);\n    cache[key] = result;\n    return result;\n  }\n};\n","let selectedInfoWindow = null;\n\nconst makeInfoWindow = title => (\n  `<p class='infoWindow'>\n    ${title}\n  </p>`\n);\n\nexport default (map, maps, title, lat, lng, icon, hideInfoWindow, drop=false)=> {\n  const marker = new maps.Marker({\n    position: {\n      lat: Number(lat),\n      lng: Number(lng)\n    },\n    map: map,\n    title,\n    animation: drop && maps.Animation.DROP,\n    ...(icon && {icon})\n  });\n\n  if(!hideInfoWindow) {\n    const infoWindow = new maps.InfoWindow({\n      content: makeInfoWindow(title)\n    });\n    marker.addListener('click', () => {\n      if (selectedInfoWindow) {\n        selectedInfoWindow.close();\n      }\n      selectedInfoWindow = infoWindow;\n      infoWindow.open(map, marker);\n    });\n  }\n  return marker;\n}\n","const weekDays = {\n  0: 'sunday',\n  1: 'monday',\n  2: 'tuesday',\n  3: 'wednesday',\n  4: 'thursday',\n  5: 'friday',\n  6: 'saturday'\n};\n\nexport default date => ({\n  weekDay: weekDays[date.getDay()],\n  hour: date.getHours() < 10 ? `0${date.getHours()}` : `${date.getHours()}`\n});","import directionPositions from './directionPositions';\nimport shortestPath from './shortestPath';\nimport createUniqueMarker from './createUniqueMarker';\nimport getTime from './getTime';\nconst positionMarker = require('../assets/position_marker.svg');\nconst flagIcon = require('../assets/position_marker.svg');\n\nlet { startMarker, destMarker } = directionPositions.getMarkers();\nlet paths = null;\nlet alternativePaths = null;\n\nexport const runShortestPathAlg = (map, maps, onPathFound) => {\n  const {startPos, destPos} = directionPositions.getPositions();\n  if (!startPos || !destPos) {\n    // FIXME deduce from inputs.\n    return;\n  }\n\n  // Fit both the starting point and the destination into the map.\n  const bounds = new maps.LatLngBounds();\n  bounds.extend(new maps.LatLng(startPos.lat, startPos.lng));\n  bounds.extend(new maps.LatLng(destPos.lat, destPos.lng));\n  map.fitBounds(bounds, 70);\n\n  shortestPath(\n    maps,\n    startPos,\n    destPos,\n    getTime(new Date()),\n  )\n    .then(result => {\n      if(paths) {\n        paths.forEach(path => path.setMap(null));\n      }\n      if (alternativePaths){\n        alternativePaths.forEach((path => path.setMap(null)));\n        // Draw alternative path, so that it might later be overridden by the shortest path.\n      }\n\n      let lineSymbol = {\n        path: 'M 0,-0.25 0.25,0 0,0.25 -0.25,0 0,-0.25',\n        strokeOpacity: 0.5,\n      };\n\n      const pathsOffset = 0.00002;\n      const totalSeconds = 2000; // total seconds to animate the path\n      if (result.alternative) {\n        let totalStepsAlternative = result.alternative.reduce((acc, { overviewPath }) => acc += overviewPath.length, 0);\n        const animationDelayAlternative = totalSeconds/totalStepsAlternative;\n        alternativePaths = result.alternative.map(({ transport, overviewPath }, index) => {\n          let delay = 0;\n          for ( let pathIndex = 0; pathIndex < index; ++pathIndex) {\n            delay += animationDelayAlternative * result.alternative[pathIndex].overviewPath.length;\n          }\n          const pathPolyLine = new maps.Polyline({\n            geodesic: true,\n            strokeOpacity: transport === 'WALKING' ? 0 : 0.5,\n            strokeColor: 'rgb(255,96,0)',\n            strokeWeight: 4,\n            ...(transport === 'WALKING' && {icons: [{icon: lineSymbol, offset: '10px', repeat: '10px'}]}),\n          });\n          let animatedPath = new maps.MVCArray();\n          for ( let i = 0; i < overviewPath.length; i++) {\n            const currentCoord = new maps.LatLng(\n              `${overviewPath[i].lat + (i === 0 ? 0 : pathsOffset)}`,\n              `${overviewPath[i].lng + (i === 0 ? 0 : pathsOffset)}`\n            );\n            if (i === 0) {\n              animatedPath.push(currentCoord);\n              pathPolyLine.setPath(animatedPath);\n            } else {\n              setTimeout(() => {\n                animatedPath.push(currentCoord);\n              }, (animationDelayAlternative * i) + delay);\n            }\n          }\n          return pathPolyLine;\n        });\n        directionPositions.setAlternativePath(alternativePaths);\n        alternativePaths.forEach(path => path.setMap(map))\n      }\n\n      // Draw shortest path\n      let totalStepsShortest = result.shortest.reduce((acc, { overviewPath }) => acc += overviewPath.length, 0);\n      const animationDelayShortest = totalSeconds/totalStepsShortest;\n      paths = result.shortest.map(({ transport, overviewPath }, index) => {\n        let delay = 0;\n        for ( let pathIndex = 0; pathIndex < index; ++pathIndex) {\n          delay += animationDelayShortest * result.shortest[pathIndex].overviewPath.length;\n        }\n        const pathPolyLine = new maps.Polyline({\n          geodesic: true,\n          strokeOpacity: transport === 'WALKING' ? 0 : 0.5,\n          strokeColor: 'rgb(11, 104, 255)',\n          strokeWeight: 6,\n          ...(transport === 'WALKING' && { icons: [{ icon: lineSymbol, offset: '0', repeat: '10px' }]}),\n        });\n\n        let animatedPath = new maps.MVCArray();\n        for ( let i = 0; i < overviewPath.length; i++) {\n          const currentCoord = new maps.LatLng(\n            `${overviewPath[i].lat - (i === 0 ? 0 : pathsOffset)}`,\n            `${overviewPath[i].lng - (i === 0 ? 0 : pathsOffset)}`\n          );\n          if (i === 0) {\n            animatedPath.push(currentCoord);\n            pathPolyLine.setPath(animatedPath);\n          } else {\n            setTimeout(() => {\n              animatedPath.push(currentCoord);\n            }, (animationDelayShortest * i) + delay);\n          }\n        }\n        return pathPolyLine;\n      });\n      directionPositions.setShortestPath(paths);\n      paths.forEach(path => path.setMap(map));\n      onPathFound(result);\n    });\n};\n\nconst addGoogleSearchBox = (map, maps, fromRef, toRef) => {\n  const fromSearchBox = new maps.places.SearchBox(fromRef.current);\n  const toSearchBox = new maps.places.SearchBox(toRef.current);\n\n  addSearchListener(fromSearchBox, map, maps, 'from');\n  addSearchListener(toSearchBox, map, maps, 'to');\n\n  const searchBounds = new maps.LatLngBounds(\n    new maps.LatLng(45.917775, 8.873512),\n    new maps.LatLng(46.069719, 9.035068),\n  );\n  fromSearchBox.setBounds(searchBounds);\n  toSearchBox.setBounds(searchBounds);\n};\n\nconst addSearchListener = (searchBox, map, maps, kind) => {\n  let marker;\n  let markerIcon;\n  if(kind === 'from') {\n    marker=startMarker;\n    markerIcon = positionMarker;\n  } else {\n    marker= destMarker;\n    markerIcon = flagIcon;\n  }\n\n  let location = null;\n  maps.event.addListener(searchBox, 'places_changed', () => {\n    searchBox.set('map', null);\n    let place = searchBox.getPlaces()[0];\n    if (marker) {\n      marker.setMap(null);\n    }\n    location = place.geometry.location;\n    if (!searchBox.getBounds().contains(location)) {\n      alert('Please chose a location between Lugano and surroundings.')\n    } else {\n      if (kind === 'to') {\n        directionPositions.setDest({\n          lat: location.lat(),\n          lng: location.lng(),\n        });\n        directionPositions.setDestPlace(place.name);\n      } else {\n        directionPositions.setStart( {\n          lat: location.lat(),\n          lng: location.lng(),\n        });\n        directionPositions.setStartPlace(place.name);\n      }\n\n      marker = createUniqueMarker(\n        map,\n        maps,\n        '',\n        location.lat(),\n        location.lng(),\n        markerIcon,\n        true,\n        true\n      );\n      marker.setMap(map);\n      marker.setZIndex(9999);\n      if(kind === 'from') {\n        directionPositions.setStartMarker(marker);\n      }else{\n        directionPositions.setDestMarker(marker);\n      }\n    }\n    searchBox.set('map', map);\n    map.panTo(location);\n  });\n};\n\nexport default addGoogleSearchBox;\n","export default () => new Promise((resolve, reject) => {\n  if (!navigator.geolocation) {\n    reject(new Error('Geolocation is not available'));\n  }\n  navigator.geolocation.getCurrentPosition(position => {\n    resolve({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    });\n  }, reject);\n});\n","import directionPositions from './directionPositions';\nimport getPosition from './getPosition';\nimport createUniqueMarker from './createUniqueMarker';\nconst positionMarker = require('../assets/position_marker.svg');\nconst flagIcon = require('../assets/position_marker.svg');\n\nexport default async (mapHandler, inputRef, kind) => {\n  const geocoder = new mapHandler.maps.Geocoder();\n  const currentPosition = await getPosition();\n\n  let markerIcon;\n  if (kind === 'start') {\n    directionPositions.setStart(currentPosition)\n    directionPositions.setStartPlace('your location')\n    markerIcon = positionMarker;\n  } else {\n    directionPositions.setDest(currentPosition)\n    directionPositions.setDestPlace('your location')\n    markerIcon = flagIcon;\n  }\n\n  geocoder.geocode({'location': currentPosition}, (results, status) => {\n    if (status === 'OK') {\n      if (results[0]) {\n        inputRef.current.value = results[0].formatted_address;\n\n        const marker = createUniqueMarker(\n          mapHandler.map,\n          mapHandler.maps,\n          '',\n          currentPosition.lat,\n          currentPosition.lng,\n          markerIcon,\n          true,\n        );\n        marker.setMap(mapHandler.map);\n        marker.setZIndex(9999);\n        if(kind === 'from') {\n          directionPositions.setStartMarker(marker);\n        } else {\n          directionPositions.setDestMarker(marker);\n        }\n        mapHandler.map.panTo(currentPosition);\n      } else {\n        new Error('No results found');\n      }\n    } else {\n      new Error('Geocoder failed due to: ' + status);\n    }\n  });\n}\n","import React, {useState} from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './TabBar.module.css';\nimport directionPositions from '../../../utils/directionPositions'\n\n\nconst TabBar = ({className, tabs, current}) => {\n    const [activeTabIndex, setActiveTabIndex] = useState(current);\n\n    if (tabs.length < 1) {\n        throw new Error('Cannot create a TabBar with no tabs');\n    }\n\n    const labels = tabs.map(({label}, index) => (\n        <div\n            key={index}\n            className={classNames(styles.label, {[styles.active]: index === activeTabIndex})}\n            onClick={() => {\n                setActiveTabIndex(index);\n                let polylines = directionPositions.getPolylines();\n                if (index === 1) {\n                    polylines.alternative.map(path => path.setOptions({strokeWeight: 6, zIndex:9999}));\n                    polylines.shortest.map(path => path.setOptions({strokeWeight: 4, zIndex:999}));\n                } else {\n                    polylines.shortest.map(path => path.setOptions({strokeWeight: 6, zIndex:9999}));\n                    polylines.alternative.map(path => path.setOptions({strokeWeight: 4, zIndex:999}));\n                }\n            }}\n        >\n            {label}\n        </div>\n    ));\n\n    return (\n        <div className={classNames('Tabs', styles.container, className)}>\n            <div className={styles.header}>{labels}</div>\n            <div>{tabs[activeTabIndex].component}</div>\n        </div>\n    );\n};\n\nTabBar.propTypes = {\n    className: PropTypes.string,\n    theme: PropTypes.oneOf(['empty', 'full']),\n    tabs: PropTypes.arrayOf(\n        PropTypes.shape({\n            label: PropTypes.string,\n            component: PropTypes.any,\n        })\n    ).isRequired,\n    /**\n     * The index of the currently opened tab.\n     */\n    current: PropTypes.number,\n};\n\nTabBar.defaultProps = {\n    className: '',\n    current: 0,\n};\n\nexport default TabBar;\n","import TabBar from './TabBar';\n\n\nexport default TabBar;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {ArrowBack} from '@material-ui/icons';\nimport styles from './Sidebar.module.css';\n\nconst Credits = ({ onBack, className }) => (\n  <nav className={classNames('Sidebar', className, styles.container)}>\n      <div className={styles.creditsContainer}>\n        <div className={styles.creditsBackContainer}>\n          <ArrowBack\n            className={styles.creditsBack}\n            style={{fontSize: 24}}\n            onClick={onBack}\n          />\n        </div>\n        <div className={styles.creditsTitle}>Credits</div>\n        <div className={styles.creditsItem}>Logo icon made by Freepick from <a href={'https://www.flaticon.com'}>FlatIcon</a>.</div>\n        <div className={styles.creditsItem}>Other icons provided by <a href={'https://material-ui.com'}>Material-UI</a> and <a href={'https://fontawesome.com/'}>FontAwesome</a>.</div>\n        <div className={styles.creditsItem}>Maps and directions provided by <a href={'https://google.com'}>Google</a>.</div>\n        <div className={styles.creditsItem}>Bike usage data provided by <a href={'https://www.publibike.ch'}>PubliBike</a>.</div>\n        <div className={styles.creditsItem}>Application developed by <b>Andrea Aquino</b>, <b>Virginie Blancs</b>, <b>Michele Damian</b>, <b>Giuseppe Mendola</b>, <b>Gabriele Prestifilippo</b> and <b>Amedeo Zucchetti</b>.</div>\n      </div>\n  </nav>\n);\n\nCredits.propTypes = {\n    className: PropTypes.string,\n    onBack: PropTypes.func,\n};\n\nexport default Credits;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport fancyTimeFormat from './fancyTimeFormat';\nimport fancyDistanceFormat from './fancyDistanceFormat';\nimport styles from './Sidebar.module.css';\n\nconst TripTitle = ({ from, to, duration, distance }) => (\n  <div className={styles.tripTitle}>\n    <span>{'From '}</span>\n    <span className={styles.tripTitleHighlight}>{from}</span>\n    <span>{' to '}</span>\n    <span className={styles.tripTitleHighlight}>{to}</span>\n    <span>{', '}</span>\n    <span className={styles.tripTitleHighlight}>{fancyTimeFormat(duration)}</span>\n    <span>{' ('}</span>\n    <span>{fancyDistanceFormat(distance)}</span>\n    <span>{')'}</span>\n  </div>\n);\n\nTripTitle.propTypes = {\n    from: PropTypes.string,\n    to: PropTypes.string,\n    duration: PropTypes.number,\n    distance: PropTypes.number,\n};\n\nexport default TripTitle;\n","import React, {useState} from 'react';\nimport styles from './Sidebar.module.css';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport TripTime from './TripTime';\nimport {MyLocation} from '@material-ui/icons';\nimport {runShortestPathAlg} from '../../utils/addGoogleSearchBox';\nimport geoCoder from '../../utils/geoCoder';\nimport hotStationLogo from '../../assets/station_marker_hot.svg';\nimport TabBar from './tab-bar';\nimport Credits from './Credits';\nimport TripTitle from './TripTitle';\nimport directionPositions from '../../utils/directionPositions';\n\nconst getPlaces = paths => {\n  const places = [];\n  places.push(directionPositions.getPlaces().startPlace);\n  paths.forEach(path => {\n    if (path.stations) {\n      places.push(`${path.stations.from.name} station`);\n      places.push(`${path.stations.end.name} station`);\n    }\n  });\n  places.push(directionPositions.getPlaces().destPlace);\n  return places;\n};\n\nconst Sidebar = ({ className, fromRef, toRef, mapHandler }) => {\n  const [paths, setPaths] = useState(null);\n  const [isCreditsVisible, setIsCreditsVisible] = useState(false);\n\n  if  (isCreditsVisible) {\n    return <Credits onBack={() => setIsCreditsVisible(false)} className={className} />;\n  }\n\n  const shortestPath = paths ? paths.shortest : null;\n  const alternativePath = paths ? paths.alternative: null;\n\n  const tabs = [];\n  if (shortestPath) {\n    const places = getPlaces(shortestPath);\n    const from = places[0];\n    const to = places[places.length - 1];\n    const duration = shortestPath.reduce((acc, route) => acc + route.duration, 0);\n    const distance = shortestPath.reduce((acc, route) => acc + route.distance, 0);\n    tabs.push({\n      label: 'Shortest',\n      component: (\n        <div className={styles.overallTripContainer}>\n          <TripTitle from={from} to={to} duration={duration} distance={distance} />\n          {shortestPath.map((path, i) => (\n            <TripTime alternative={false} path={path} key={i} from={places[i]} to={places[i + 1]}/>\n          ))}\n        </div>\n      ),\n    })\n  }\n  if (alternativePath) {\n    const places = getPlaces(alternativePath);\n    const from = places[0];\n    const to = places[places.length - 1];\n    const duration = alternativePath.reduce((acc, route) => acc + route.duration, 0);\n    const distance = alternativePath.reduce((acc, route) => acc + route.distance, 0);\n    tabs.push({\n      label: 'Eco',\n      component: (\n        <div className={styles.overallTripContainer}>\n          <TripTitle from={from} to={to} duration={duration} distance={distance} />\n          {alternativePath.map((path, i) => (\n            <TripTime alternative={true} path={path} key={i} from={places[i]} to={places[i + 1]} />\n          ))}\n        </div>\n      ),\n    })\n  }\n\n  return (\n    <nav className={classNames('Sidebar', className, styles.container)}>\n      <header className={styles.header}>\n        <div className={styles.title}>\n          <img src={`${process.env.PUBLIC_URL}/biker.svg`} width={42} alt={'logo'} />\n          <span className={styles.titleBike}>Bike</span>\n          <span className={styles.titleMe}>Me</span>\n          <span className={styles.titleThere}>There</span>\n        </div>\n        <div>\n          <div className={styles.inputContainer}>\n            <div className={styles.iconContainer}>\n              <i className={classNames('fas fa-map-marker-alt', styles.icon)}/>\n            </div>\n            <input\n              ref={fromRef}\n              id='from-place'\n              placeholder='Choose starting point...'\n              className={styles.input}\n              style={{paddingRight: '2rem'}}\n            />\n            <MyLocation\n              className={styles.locationIcon}\n              style={{fontSize: 18}}\n              onClick={()=>geoCoder(mapHandler,fromRef,'start')}\n            />\n          </div>\n          <div className={classNames(styles.inputContainer, styles.secondInput)}>\n            <div className={styles.iconContainer}>\n              <i className={classNames('fas fa-flag', styles.icon)} />\n            </div>\n            <input\n              ref={toRef}\n              id='to-place'\n              placeholder='Choose destination...'\n              className={classNames(styles.input, styles.destInput)}\n            />\n          </div>\n        </div>\n        <button\n          className={styles.button}\n          onClick={() => runShortestPathAlg(mapHandler.map, mapHandler.maps, setPaths)}\n        >\n          Search\n        </button>\n      </header>\n\n      <div className={styles.content}>\n        {Boolean(tabs.length) && (\n          <TabBar\n            className={styles.tabBar}\n            current={0}\n            tabs={tabs}\n          />\n        )}\n      </div>\n      <footer className={styles.footer}>\n        <div className={styles.footerInfo}>\n          <div>\n            <img src={hotStationLogo} width={26} alt={'marker'} />\n          </div>\n          <div className={styles.legend}>\n            <span>Stations with this symbol are usually on high demand at this time. Travel there to help your fellow bikers and earn awesome rewards!</span>\n          </div>\n        </div>\n        <div className={styles.creditsButtonContainer}>\n          <button\n            className={styles.creditsButton}\n            onClick={() => setIsCreditsVisible(true)}\n          >\n            Credits\n          </button>\n        </div>\n      </footer>\n    </nav>\n  );\n};\n\nSidebar.propTypes = {\n  className: PropTypes.string,\n  fromRef: PropTypes.any,\n  toRef: PropTypes.any,\n  paths: PropTypes.any,\n  mapHandler: PropTypes.any,\n};\n\nexport default Sidebar;\n","export default [\n  {elementType: 'geometry', stylers: [{color: '#ebe3cd'}]},\n  {elementType: 'labels.text.fill', stylers: [{color: '#523735'}]},\n  {elementType: 'labels.text.stroke', stylers: [{color: '#f5f1e6'}]},\n  {\n    featureType: 'administrative',\n    elementType: 'geometry.stroke',\n    stylers: [{color: '#c9b2a6'}]\n  },\n  {\n    featureType: 'administrative.land_parcel',\n    elementType: 'geometry.stroke',\n    stylers: [{color: '#dcd2be'}]\n  },\n  {\n    featureType: 'administrative.land_parcel',\n    elementType: 'labels.text.fill',\n    stylers: [{color: '#ae9e90'}]\n  },\n  {\n    featureType: 'landscape.natural',\n    elementType: 'geometry',\n    stylers: [{color: '#dfd2ae'}]\n  },\n  {\n    featureType: 'poi',\n    elementType: 'geometry',\n    stylers: [{color: '#dfd2ae'}]\n  },\n  {\n    featureType: 'poi',\n    elementType: 'labels.text.fill',\n    stylers: [{color: '#93817c'}]\n  },\n  {\n    featureType: 'poi.park',\n    elementType: 'geometry.fill',\n    stylers: [{color: '#a5b076'}]\n  },\n  {\n    featureType: 'poi.park',\n    elementType: 'labels.text.fill',\n    stylers: [{color: '#447530'}]\n  },\n  {\n    featureType: 'road',\n    elementType: 'geometry',\n    stylers: [{color: '#f5f1e6'}]\n  },\n  {\n    featureType: 'road.arterial',\n    elementType: 'geometry',\n    stylers: [{color: '#fdfcf8'}]\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'geometry',\n    stylers: [{color: '#f8c967'}]\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'geometry.stroke',\n    stylers: [{color: '#e9bc62'}]\n  },\n  {\n    featureType: 'road.highway.controlled_access',\n    elementType: 'geometry',\n    stylers: [{color: '#e98d58'}]\n  },\n  {\n    featureType: 'road.highway.controlled_access',\n    elementType: 'geometry.stroke',\n    stylers: [{color: '#db8555'}]\n  },\n  {\n    featureType: 'road.local',\n    elementType: 'labels.text.fill',\n    stylers: [{color: '#806b63'}]\n  },\n  {\n    featureType: 'transit.line',\n    elementType: 'geometry',\n    stylers: [{color: '#dfd2ae'}]\n  },\n  {\n    featureType: 'transit.line',\n    elementType: 'labels.text.fill',\n    stylers: [{color: '#8f7d77'}]\n  },\n  {\n    featureType: 'transit.line',\n    elementType: 'labels.text.stroke',\n    stylers: [{color: '#ebe3cd'}]\n  },\n  {\n    featureType: 'transit.station',\n    elementType: 'geometry',\n    stylers: [{color: '#dfd2ae'}]\n  },\n  {\n    featureType: 'water',\n    elementType: 'geometry.fill',\n    stylers: [{color: '#b9d3c2'}]\n  },\n  {\n    featureType: 'water',\n    elementType: 'labels.text.fill',\n    stylers: [{color: '#92998d'}]\n  }\n]","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport PropTypes from 'prop-types';\nimport styles from './Map.module.css';\nimport stylesMap from './stylesMap';\n\nconst LUGANO_COORDS = {\n  lat: 46.01008,\n  lng: 8.96004\n};\n\nconst GOOGLE_KEY = process.env.REACT_APP_GOOGLE_KEY;\n\nconst Map = ({ defaultCenter, defaultZoom, onApiLoaded, publibikeStations }) => (\n  <div className={styles.map}>\n    <GoogleMapReact\n      options={{\n        styles: stylesMap,\n      }}\n      yesIWantToUseGoogleMapApiInternals\n      onGoogleApiLoaded={({ map, maps }) => onApiLoaded(map, maps)}\n      bootstrapURLKeys={{ key: GOOGLE_KEY, libraries: ['places'] }}\n      defaultCenter={defaultCenter}\n      defaultZoom={defaultZoom}\n    />\n  </div>\n);\n\nconst Coordinates = PropTypes.shape({\n  lat: PropTypes.number,\n  lng: PropTypes.number,\n});\n\nMap.propTypes = {\n  defaultCenter: Coordinates,\n  defaultZoom: PropTypes.number,\n  onApiLoaded: PropTypes.func,\n  publibikeStations: PropTypes.arrayOf(Coordinates)\n};\n\nMap.defaultProps = {\n  defaultCenter: LUGANO_COORDS,\n  defaultZoom: 16,\n};\n\nexport default Map;\n","import React, { useRef, useEffect, useState } from 'react';\nimport Sidebar from './components/sidebar';\nimport styles from './App.module.css';\nimport classNames from 'classnames';\nimport Map from './components/map';\nimport luganoStations from './data/stations';\nimport getPosition from './utils/getPosition';\nimport createUniqueMarker from './utils/createUniqueMarker';\nimport addGoogleSearchBox from './utils/addGoogleSearchBox';\nimport mightHaveFewBikesAt from './utils/mightHaveFewBikesAt';\nimport getTime from './utils/getTime';\nconst stationLogo = require('./assets/station_marker.svg');\nconst hotStationLogo = require('./assets/station_marker_hot.svg');\n\nconst App = () => {\n  const [mapHandler, setMapHandler] = useState(null);\n\n  const fromRef = useRef(null);\n  const toRef = useRef(null);\n\n  useEffect(() => {\n    if(mapHandler && mapHandler.map) {\n      for (const station of luganoStations) {\n        const { name, coords } = station;\n        const logo =  mightHaveFewBikesAt(station, getTime(new Date()))\n          ? hotStationLogo\n          : stationLogo;\n\n        createUniqueMarker(mapHandler.map, mapHandler.maps, name, coords.lat, coords.lng, logo)\n      }\n    }\n  }, [mapHandler]);\n\n  return (\n    <div className={classNames('App', styles.container)}>\n      <Sidebar\n        className={styles.sidebar}\n        fromRef={fromRef}\n        toRef={toRef}\n        mapHandler={mapHandler}\n      />\n      <main className={styles.mainPanel}>\n        <Map\n          onApiLoaded={async (map, maps) => {\n            setMapHandler({ map, maps });\n            addGoogleSearchBox(map, maps, fromRef, toRef);\n            getPosition().then(map.panTo);\n          }}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}